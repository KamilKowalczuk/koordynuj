---
// src/components/sections/CaseStudy.astro - WERSJA W PEŁNI ZINTEGROWANA ZE STRAPI
import AnimateOnScroll from '../ui/AnimateOnScroll.astro';
import AnimatedCounter from '../ui/AnimatedCounter.svelte';
import { getCaseStudy } from '../../lib/strapi';
import { fixOrphans } from '../../lib/typography';

// Krok 1: Pobieramy dane z CMS
const caseStudyData = await getCaseStudy();

// Krok 2: Definiujemy dane zapasowe na wypadek problemów z API
const fallbackData = {
    title: "Precyzja, którą można zmierzyć.",
    subtitle: "Chcesz osiągnąć podobne <span class=\"font-semibold text-brand-blue\">wymierne rezultaty</span>?",
    description: "", // To pole nie jest obecnie używane w komponencie
    results: [
        { value: 27, suffix: "%", prefix: "+", description: "wzrost przychodów z programów profilaktycznych", color: "blue" },
        { value: 15, suffix: "h", prefix: "-", description: "oszczędności czasu na administracji tygodniowo", color: "green" },
        { value: 100, suffix: "%", prefix: "", description: "zgodność rozliczeń po 3 miesiącach", color: "blue" }
    ],
    testimonial: "\"Współpraca, która realnie przekłada się na wyniki finansowe i spokój w zarządzaniu. Zespół Koordynuj Zdrowie to partner, a nie tylko dostawca.\"",
    clientName: "Dr Janusz Kowalski",
    clientPosition: "Dyrektor, NZOZ \"Nowa Jakość\""
};

// Krok 3: Łączymy dane i przygotowujemy metryki
const data = caseStudyData || fallbackData;

let metrics = fallbackData.results;
if (data.results && typeof data.results === 'string') {
    try {
        // Parsujemy JSON ze Strapi do tablicy obiektów
        metrics = JSON.parse(data.results);
    } catch (e) {
        console.error("Błąd parsowania pola 'results' ze Strapi. Użyto danych zapasowych.", e);
    }
} else if (Array.isArray(data.results)) {
    metrics = data.results;
}

// Prosty trick do wygenerowania inicjałów
const getInitials = (name: string) => {
    if (!name) return 'KZ';
    const parts = name.split(' ');
    if (parts.length > 1) {
        return parts[0].charAt(0) + parts[1].charAt(0);
    }
    return name.substring(0, 2);
}
---

<section id="dowod" class="py-20 sm:py-32 bg-background-muted relative overflow-hidden">
    <div class="absolute inset-0 opacity-[0.02] pointer-events-none">
        <div class="casestudy-bg-pattern absolute inset-0"></div>
    </div>
    <div class="absolute inset-0 opacity-5">
        <svg class="w-full h-full" viewBox="0 0 1200 800">
            <g class="animate-chart-bars">
                <rect x="100" y="600" width="30" height="200" fill="#00A9E0" opacity="0.3"/>
                <rect x="150" y="500" width="30" height="300" fill="#00A9E0" opacity="0.4"/>
                <rect x="200" y="450" width="30" height="350" fill="#00A9E0" opacity="0.3"/>
                <rect x="250" y="400" width="30" height="400" fill="#00A9E0" opacity="0.5"/>
                <rect x="300" y="300" width="30" height="500" fill="#00A9E0" opacity="0.3"/>
            </g>
            <path d="M50,650 Q300,400 600,300 T1150,200" stroke="#00A9E0" stroke-width="2" fill="none" opacity="0.2" class="animate-trend-line"/>
            <circle cx="115" cy="600" r="3" fill="#00A9E0" opacity="0.4" class="animate-pulse-data"/>
            <circle cx="165" cy="500" r="3" fill="#00A9E0" opacity="0.4" class="animate-pulse-data-delay-1"/>
            <circle cx="215" cy="450" r="3" fill="#00A9E0" opacity="0.4" class="animate-pulse-data-delay-2"/>
        </svg>
    </div>

    <AnimateOnScroll>
        <div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="text-center max-w-3xl mx-auto">
                <h2 class="text-4xl md:text-5xl font-extrabold text-text-primary tracking-tighter mb-14 md:mb-20" set:html={data.title}></h2>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mb-16 md:mb-24">
                {metrics.map((metric: any) => (
                    <div class="metric-card card group flex flex-col p-8 bg-white border border-slate-200/80 rounded-3xl shadow-sm transition-all duration-500 hover:border-brand-blue/50 hover:shadow-xl hover:shadow-brand-blue/10 text-center">
                        <div class="mb-4 counter-container">
                            <AnimatedCounter 
                                targetValue={metric.value}
                                prefix={metric.prefix}
                                suffix={metric.suffix}
                                color={metric.color}
                                client:visible
                            />
                        </div>
                        <p class="text-text-muted leading-relaxed group-hover:text-text-primary transition-colors duration-300">
                            {metric.description}
                        </p>
                    </div>
                ))}
            </div>

            <div class="max-w-4xl mx-auto">
                <div class="testimonial-card bg-white border border-slate-200/80 rounded-3xl shadow-sm p-8 md:p-12 relative transition-all duration-500 hover:border-brand-blue/50 hover:shadow-xl hover:shadow-brand-blue/10">
                    <div class="quote-icon absolute -top-4 -left-4 w-16 h-16 bg-brand-blue/10 rounded-full flex items-center justify-center group-hover:bg-brand-blue/20 transition-all duration-500">
                        <svg class="w-8 h-8 text-brand-blue transition-transform duration-300 hover:scale-110" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h4v10h-10z"/>
                        </svg>
                    </div>
                    <blockquote class="testimonial-quote strapi-content mb-6 pl-8">
                        <div set:html={fixOrphans(data.testimonial)}></div>
                    </blockquote>
                    <div class="flex items-center pl-8 author-info">
                        <div class="avatar w-12 h-12 bg-gradient-to-br from-brand-blue to-brand-blue/80 rounded-full flex items-center justify-center transition-transform duration-300 hover:scale-110">
                            <span class="text-white font-bold">{getInitials(data.clientName)}</span>
                        </div>
                        <div class="ml-4">
                            <p class="font-semibold text-text-primary">{data.clientName}</p>
                            <p class="text-text-muted">{data.clientPosition}</p>
                        </div>
                    </div>
                    <div class="absolute bottom-4 right-4 w-24 h-24 bg-gradient-to-br from-brand-blue/5 to-transparent rounded-full decorative-blob"></div>
                </div>
            </div>

            <div class="text-center mt-16 md:mt-24">
                <p class="text-lg text-text-muted mb-6" set:html={data.subtitle}></p>
                <a href="#kontakt" class="btn-primary inline-flex items-center group">
                    Sprawdź potencjał swojej placówki
                    <svg class="ml-2 w-5 h-5 transition-transform group-hover:translate-x-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"/>
                    </svg>
                </a>
            </div>
        </div>
    </AnimateOnScroll>
</section>

<style>
    .metric-card, .testimonial-card, .casestudy-bg-pattern, .btn-primary, .decorative-blob,
    .animate-chart-bars, .animate-trend-line, .animate-pulse-data,
    @keyframes chart-bars, @keyframes trend-line, @keyframes pulse-data, @keyframes patternDrift, @keyframes blobPulse {
        /* Wszystkie oryginalne style pozostają, usunięto tylko te związane z [data-reveal] */
    }
    
    .metric-card { position: relative; }
    .metric-card::before {
        content: ''; position: absolute; inset: 0; border-radius: 1.5rem;
        background: linear-gradient(135deg, rgba(0, 169, 224, 0.05), rgba(0, 169, 224, 0.02));
        opacity: 0; transition: opacity 0.5s ease;
    }
    .metric-card:hover::before { opacity: 1; }
    .metric-card:hover { transform: translateY(-4px); }

    .testimonial-card { position: relative; overflow: hidden; }
    .testimonial-card::before {
        content: ''; position: absolute; inset: 0; border-radius: 1.5rem;
        background: linear-gradient(135deg, rgba(0, 169, 224, 0.03), rgba(0, 169, 224, 0.01));
        opacity: 0; transition: opacity 0.5s ease;
    }
    .testimonial-card:hover::before { opacity: 1; }
    .testimonial-card:hover { transform: translateY(-2px); }
    .quote-text { position: relative; }
    .testimonial-card:hover .quote-text { color: rgba(74, 85, 104, 0.95); }
    .decorative-blob { animation: blobPulse 8s ease-in-out infinite; }

    .casestudy-bg-pattern {
        background-image: 
            radial-gradient(circle at 15% 25%, rgba(0, 169, 224, 0.08) 1px, transparent 1px),
            radial-gradient(circle at 85% 75%, rgba(0, 169, 224, 0.06) 1px, transparent 1px),
            radial-gradient(circle at 45% 50%, rgba(0, 169, 224, 0.07) 1px, transparent 1px);
        background-size: 200px 200px, 280px 280px, 240px 240px;
        animation: patternDrift 35s linear infinite;
    }

    .btn-primary {
        position: relative; overflow: hidden;
        transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }
    
    @keyframes chart-bars {
        0%, 100% { transform: scaleY(1); }
        50% { transform: scaleY(1.1); }
    }
    @keyframes trend-line {
        from { stroke-dasharray: 1000; stroke-dashoffset: 1000; }
        to { stroke-dasharray: 1000; stroke-dashoffset: 0; }
    }
    @keyframes pulse-data {
        0%, 100% { opacity: 0.4; transform: scale(1); }
        50% { opacity: 0.8; transform: scale(1.5); }
    }
    .animate-chart-bars { animation: chart-bars 8s ease-in-out infinite; }
    .animate-trend-line { animation: trend-line 3s ease-out 1s forwards; stroke-dasharray: 1000; stroke-dashoffset: 1000; }
    .animate-pulse-data { animation: pulse-data 2s ease-in-out infinite; }
    .animate-pulse-data-delay-1 { animation: pulse-data 2s ease-in-out infinite 0.5s; }
    .animate-pulse-data-delay-2 { animation: pulse-data 2s ease-in-out infinite 1s; }
    
    @keyframes patternDrift {
        0% { background-position: 0% 0%, 0% 0%, 0% 0%; }
        100% { background-position: 100% 100%, -100% 100%, 50% -100%; }
    }
    @keyframes blobPulse {
        0%, 100% { transform: scale(1) rotate(0deg); opacity: 0.1; }
        50% { transform: scale(1.1) rotate(180deg); opacity: 0.2; }
    }
    @media (prefers-reduced-motion: reduce) {
        .metric-card, .testimonial-card, .casestudy-bg-pattern, .decorative-blob, .btn-primary,
        .animate-chart-bars, .animate-trend-line, .animate-pulse-data, .animate-pulse-data-delay-1, .animate-pulse-data-delay-2 {
            animation: none !important;
            transition: none !important;
        }
    }
    @media (max-width: 768px) {
        .casestudy-bg-pattern { display: none; }
        .testimonial-card { padding: 1.5rem; }
    }
</style>